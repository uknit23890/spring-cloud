buildscript {
       ext {
              springBootVersion = '2.1.0.RELEASE'
       }
       repositories {
              mavenCentral()
       }
       dependencies {
              classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
              classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:1.2.1.RELEASE"
       }
}

plugins {
       id "org.asciidoctor.convert" version "1.5.3" apply true
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-cloud-contract'


group = 'com.sopra'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
       mavenCentral()
}

ext['spring-restdocs.version'] = '2.0.2.RELEASE'


dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR2"
        // mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:1.2.1.RELEASE"
    }
}

dependencies {
       implementation ("org.springframework.restdocs:spring-restdocs-asciidoctor")
       implementation('org.springframework.boot:spring-boot-starter-actuator')
       implementation('org.springframework.boot:spring-boot-starter-web')
       runtimeOnly('org.springframework.boot:spring-boot-devtools')
       implementation("org.junit.jupiter:junit-jupiter-api")
       implementation("org.junit.jupiter:junit-jupiter-engine")
       testCompile('org.springframework.boot:spring-boot-starter-test')
       testCompile('org.mockito:mockito-junit-jupiter')
       implementation('org.springframework.data:spring-data-mongodb')
       implementation('io.projectreactor:reactor-core')
       implementation('org.mongodb:mongodb-driver-reactivestreams')
       	compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")
		testCompile("org.springframework.cloud:spring-cloud-stream-test-support")
       testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
       testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")
       testCompile("org.springframework.cloud:spring-cloud-contract-wiremock")
}

/*
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
	}
}
*/

ext { 
       snippetsDir = file('build/generated-snippets')
}


test { 
       outputs.dir snippetsDir
}



asciidoctor {
       inputs.dir snippetsDir
       dependsOn test
    sourceDir 'src/docs/asciidoc'
    attributes \
      'snippets': file('build/generated-snippets')
}

bootJar {
       dependsOn asciidoctor 
       from ("${asciidoctor.outputDir}/html5") { 
              into 'static/docs'
       }
}

asciidoctor.doLast {
    copy {
        from "${buildDir}/asciidoc/html5"
        into "${projectDir}/src/main/resources/static"
        include 'api-guide.html'
    }
}

contracts {
    packageWithBaseClasses = 'com.example.demo'
}




task stubsJar(type: Jar) {
	classifier = "stubs"
	into('/') {
		include('**/com/example/model/*.*')
		from("${project.rootDir}/src/main/java/")
	}
	into('/') {
		include('**/com/example/model/*.*')
		from("${project.buildDir}/classes/main")
	}
	into("META-INF/${project.group}/${project.name}/${project.version}/mappings") {
		include('**/*.*')
		from("${project.rootDir}/target/snippets/stubs")
	}
	into("META-INF/${project.group}/${project.name}/${project.version}/contracts") {
		include('**/*.groovy')
		from("${project.rootDir}/src/test/resources/contracts")
	}
}
// we need the tests to pass to build the stub jar
stubsJar.dependsOn(test)
// we want to disable the default Spring Cloud Contract stub jar generation
verifierStubsJar.enabled = false

artifacts {
	archives stubsJar
}


